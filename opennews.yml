# https://traefik.io/blog/traefik-2-0-docker-101-fc2893944b9d/
# https://juliensalinas.com/en/traefik-reverse-proxy-docker-compose-docker-swarm-nlpcloud/

version: "3.9"

services:

  # Traefik for reverse proxy and load balancing
  traefik:
    image: traefik:v2.3
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      # Listen on port 443, default for HTTPS
      - 443:443
    command:
      - --providers.docker.swarmmode # Use Traefik with Docker Swarm Integration
      - --api.dashboard=true # Enable Traefik Dashboard
      - --entrypoints.websecure.address=:443

      # Certificates
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=diogosilv30@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json

    deploy:
      placement:
        constraints:
          - node.role == manager # MANDATORY: Deploy Traefik on a manager node
      labels:
        # https-redirect middleware to redirect HTTP to HTTPS
        # It can be re-used by other stacks in other Docker Compose files
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

        # traefik-https the actual router using HTTPS
        # Uses the environment variable DOMAIN
        - traefik.http.routers.traefik-public-https.rule=Host(`traefik.onews.diogosilva.tech`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        
    volumes:
      - "./letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock:ro


  # Service for the OpenNews api
  api:
    image: spamz23/opennews:api

    # Command to start the server at port 8000
    command: gunicorn opennews.wsgi:application -b 0.0.0.0:8000

    deploy:
      labels:
        - traefik.http.services.api.loadbalancer.server.port=8000 # Tell Traefik to listen port 8000 on container
        - traefik.http.routers.api.rule=Host(`api.onews.diogosilva.tech`) # Serve at api.onews.diogosilva.tech

    environment:
      # Use production settings
      DJANGO_SETTINGS_MODULE: opennews.settings.production
      VAULT_URL: http://vault:8200/
      VAULT_TOKEN: /run/secrets/vault_token # --------|
      VAULT_KEYS_CSV: /run/secrets/vault_keys_csv # --|-->File location of Docker secret
      CELERY_BROKER_URL: redis://redis:6379/ # -----|
      CELERY_RESULT_BACKEND: redis://redis:6379/ #--|--> 'redis' (instead of e.g. localhost) because it is the name of the redis service

    # Mount secrets from Swarm Manager
    secrets:
      - vault_token
      - vault_keys_csv


  # Redis database to serve as a message broker between backend
  # and celeris worker
  redis:
    image: "redis:alpine"
    volumes:
      - "redis:/data"
    deploy:
      labels:
        - traefik.http.services.redis.loadbalancer.server.port=6379


  # Celery background worker
  celery:
    image: spamz23/opennews:api
    command: celery -A opennews worker -l info

    deploy:
      labels:
        - traefik.http.services.celery.loadbalancer.server.port=8000 # Tell Traefik Celery runs at port 8000 inside the container

    environment:
      # Use production settings
      DJANGO_SETTINGS_MODULE: opennews.settings.production
      VAULT_URL: http://vault:8200/
      VAULT_TOKEN: /run/secrets/vault_token # --------|
      VAULT_KEYS_CSV: /run/secrets/vault_keys_csv # --|-->File location of Docker secret
      CELERY_BROKER_URL: redis://redis:6379/ # -----|
      CELERY_RESULT_BACKEND: redis://redis:6379/ #--|--> 'redis' (instead of e.g. localhost) because it is the name of the redis service
      
    # Mount secrets from Swarm Manager
    secrets:
      - vault_token
      - vault_keys_csv


  # Hashicorp vault for secret management
  vault:
    image: vault:1.8.4

    deploy:
      replicas: 1
      labels:
        - traefik.http.services.vault.loadbalancer.server.port=8200 # Tell Traefik Vault runs at port 8200
        - traefik.http.routers.vault.rule=Host(`vault.onews.diogosilva.tech`) # Serve at vault.onews.diogosilva.tech

    environment:
      - VAULT_ADDR=http://127.0.0.1:8200 # Run on port 8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
      - VAULT_LOCAL_CONFIG={"backend":{"file":{"path":"vault/file"}},"listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable":1}},"ui":true, "disable_mlock":true}
    cap_add:
      - IPC_LOCK
    command: server
    volumes:
      - vault:/vault/file

volumes:
  redis:
  vault:
  
secrets:
  vault_token:
    external: true
  vault_keys_csv:
    external: true